// ! Переменные

// ? Переменная - это именованное хранилище данных.
// ? Есть 3 ключевых слова для создания переменных - let, const, var.

// todo let - современный способ создания элементо. В будущем можно изменить информацию внутри переменной.

//let name

//* После ключевого слова, записываются названия элемента

// todo Правило написания названия переменной:
// 1. Должно сожержать только буквы и цифры;
// 2. Первый символ не должен начинаться с цифр;
// 3. Запрещенно писать символы, кроме $ и _;
// 4. Желательно пистаь на латинице;
// 5. Не должно совпадать с зарезервированным словом (let let = );
// 6. Переменные из нескольких слов пишутся через camelCase либо snake_case;
// 7. Записываем подходящую по логике название;
// 8. Регистр имеет значение.

// * После названия переменной ставится знак = - это не сравнение, это присваивание. Затем помещаем какую-то информацию.

let name = 'JavaLovery';
console.log(name) //consol.log() - Эта специальная функция. Если внутри скобок мы поместим переменную, в браузере в консоли можно увидеть значение, которое хранится в указанной переменной.

//? const - современный способ создания переменной, в будущем нельзя изменять информацию внутри переменной.
// const age = 10
// age = 13
// console.log(age);

// ? var - устаревший способ создания переменной. Работает также как let, но есть исключения. 
var type = "JS"
var type = "Python"
console.log(type);

//! HOISTING(ХОЙСТИНГ)
// //todo Хойстинг - это поднятие названия переменной до её объявления.
// console.log(upVariable);
// // let upVariable = "С переменной let хойстинг не работает"
// var upVariable = 'Хойстинг работает только на перемнной var';

//! Изменение данных переменных 
let car = 'Tesla';
console.log(car);
car = "Mersedes";
console.log(car);

let brand1 = 'Adidas';
let brand2 = brand1;
console.log(brand2);

//! Типы данных
// typeof - Оператор, с помощью которого можно узнать тип данных переменной: 

let id 
console.log(typeof id); //undefined - не специальная пустота.

id = 30
console.log(typeof id); //number - числовой тип данных.

id = 'JavaScript'
console.log(typeof id); //string - строковый тип данных.

id = true
console.log(typeof id); //boolean - true; false, логический, булевый тип данных.

id = 30n
console.log(typeof id); //bigint - большие числа.

id = Symbol()
console.log(typeof id); //Symbol - уникальный символ, который не повторяется в коде.

id = null
console.log(typeof id); //null - специальная пустота.

id = {
    name: "Tom",
    age: 5,
}
console.log(typeof id); //object

//! Объект 
// Объект является сложным типом данных, то есть внутри объекта могут хранится другие типы данных, в виде ключ и значение.
// Например:
const person = {
    name: 'John',
    age: 25,
    job: "Killer",
    car: {
        model: "Audi", 
        color: "black",
        name: "lover",
    }
}
console.log(person);
console.log(person.name);
console.log(person.car.name);

console.log(person["name"]); // Старый способ обращения к объекту

let personName = person.name
console.log(personName);

// ! Массивы
// Array (массив) - специальный тип данных, который также, как и объект, может хранить в себе другие типы данных (родственник объекта). Литералы массива []. Особенности массива является то, что он упорядочен, то есть при его создании JS автоматически дает порядковый номера элементом внутри массива.
// Эти порядковые номера начинаются с 0 (нуля) и называются индексами.
// Примеры:
let mentors = ["Misha", "Aitegin", "Aliya"]
console.log(mentors);
console.log(mentors[2]);
let array = ["hello", 20, true, {model: "golf"}, null, [1, 2, 3, 4, 5]];
console.log(array);

// У массива есть такое свойство, как length, в котором хранится длина массива.
console.log(array.length);

console.log(array [array.length - 1]);

//! Арифметические операции
console.log(1+1); // Для сложения

console.log(1 - 1);// Для вычитания

console.log(1 * 1);// Для умножения

console.log(1 / 1);// Для деления

let num1 = 1231232; 
let num2 = 123231;
console.log(num1 + 5000);

let exp = 2 ** 4;
console.log(exp);// Для возведения в степень

let percent = 10 % 7
console.log(percent);//Остаток от деления

let contact = "1" + 1 
console.log(typeof contact); //Конкатенация - если сложить строковый тип данных с числовым, то JS превратит число в строку и также их склеит. Работает только со знаком +

console.log("100" * 5);// Если мы умножим строку на число, то получим новую строку с результатом умножения. JS переведет строковый тип данных в числовой.
console.log("John" * 5);// NaN - Not a number

let a = "Hello"
let b = "World"
let ab = a + " " + b
console.log('ab меня зовут Айдар');
console.log(`${ab} меня зовут Айдар`);
//todo Для того, чтобы отобразить в консоли текст и значение переменной, нужно написать текст в кривых ковычках, а переменную обернуть в знак $ с фигурными скобками. Это наз-ся интерполяция.
